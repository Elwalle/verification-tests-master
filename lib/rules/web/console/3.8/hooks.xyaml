# dc hooks
add_dc_hook_command:
  action: set_dc_hook_command
  action: click_add_hook_cmd
check_dc_hook_common_settings_from_dc_page:
  elements:
  - selector:
      xpath: |
        //lifecycle-hook[@type='<hook_type>' and h4[contains(.,'<hook_name>')] and dl[dt[contains(.,'Action')] and dd[contains(.,'<hook_action>')] and dt[contains(.,
          'Failure Policy')] and dd[contains(.,'<failure_policy>')]]]
  - selector:
      xpath: //lifecycle-hook[@type='<hook_type>']//h5[contains(.,'<container_name>')]
check_dc_hook_with_execnewpod_action_from_dc_page:
  action: check_dc_hook_command_from_dc_page
  action: check_dc_hook_env_var_from_dc_page
  action: check_dc_hook_volume_from_dc_page
check_dc_hook_volume_from_dc_page:
  element:
    selector:
      xpath: //lifecycle-hook[@type='<hook_type>']//dt[contains(text(),'Volumes')]/following-sibling::dd/div[contains(.,'<volume_name>')]
check_dc_hook_with_tagimage_action_from_dc_page:
  element:
    selector:
      xpath: //lifecycle-hook[@type='<hook_type>']//div[a[contains(.,'<istag_name>')]]
check_dc_hook_command_from_dc_page:
  scripts:
  - command: |
        var values = "<hook_command>".split(",");
        var el = document.querySelectorAll('code.command span[class~=truncated-content]');
        for (var i=0; i < values.length; i++) {
          for (var j=0; j < el.length; j++) {
            if(el[j].textContent == values[i]) {
             match = true;
             break;
            } else {
             match = false;
            }
          }
        }
        return match;     
    expect_result: true
check_dc_hook_env_var_from_dc_page:
  scripts:
  - command: |
        var values = "<env_var>".split(",");
        var el = document.querySelectorAll('dd div[ng-repeat~=env] div[title]');
        for (var i=0; i < values.length; i++) {
          for (var j=0; j < el.length; j++) {
            if(el[j].textContent.trim() == values[i]) {
             match = true;
             break;
            } else {
             match = false;
            }
          }
        }
        return match;
    expect_result: true
check_dc_hook_missing_from_dc_page:
  element:
    selector:
      xpath: //lifecycle-hook[@type='<hook_type>' and h4[contains(.,'<hook_name>')]]
    missing: true
check_dc_hook_part_missing_from_dc_page:
  element:
    selector:
      xpath: //h3[contains(.,'Hooks')]/parent::div//p[contains(.,'none') or contains(.,'None')]
check_dc_recreate_strategy_default_settings:
  elements:
  - selector:
      xpath: //div[contains(@ng-model,'strategyData.type')]//span[@aria-label='Select box activate']//span[contains(text(),'Recreate')]
  - selector:
      xpath: //a[contains(@href,'recreate-strategy') and contains(normalize-space(),'Learn More')]
  - selector:
      xpath: //input[@id='strategyTimeout' and @placeholder='600']
    type: input
check_dc_exec_new_pod_hook_setting:
  elements:
  - selector:
      xpath: //div[contains(@id,'<hook_type>')]//div[contains(@ng-model,'execNewPod')]//span[contains(text(),'<container_name>')]
  - selector:
      xpath: //div[contains(@id,'<hook_type>')]//div[contains(@ng-model,'failurePolicy')]//span[contains(text(),'<failure_policy>')]
  action: check_dc_hook_newpod_command
check_dc_hook_newpod_command:
  scripts:
  - command: |
        var value = "<command>";
        var el = document.querySelectorAll('p[ng-model="input.args"] input');
        if (el[0].value == value) {
          return true;
        } else {
          return false;
        }
    expect_result: true
check_dc_pod_based_lifecycle_hook_doc_link:
  element:
    selector:
      xpath: //div[contains(@id,'mid')]//a[contains(@href,'pod-based-lifecycle-hook') and contains(normalize-space(),'Learn More')]
click_add_hook_cmd:
  element:
    selector:
      xpath: //div[contains(@id,'<hook_type>')]//a[text()="Add" and not(@disabled)]
    op: click
click_add_lifecycle_hook:
  element:
    selector:
      xpath: //a[contains(.,'Add' ) and contains(., substring('<hook_type>', 2)) and contains(.,'ook')]
    op: click
click_to_hide_dc_advanced_strategy_options:
  element:
    selector:
      xpath: //a[contains(.,'Hide Advanced Strategy Options')]
    op: click
click_remove_dc_lifecycle_hook:
  element:
    selector:
      xpath: //div[contains(@id,'<hook_type>')]//a[contains(.,'Remove')]
    op: click
select_dc_hook_failure_policy:
  elements:
  - selector:
      xpath: //div[contains(@id,'<hook_type>')]//div[contains(@ng-model,'failurePolicy')]//span[@aria-label='Select box activate']
    op: click
  - selector:
      xpath: //div[contains(@id,'<hook_type>')]//div[contains(@ng-model,'failurePolicy')]//ul[@role='listbox']//div[contains(normalize-space(),'<failure_policy>')]
    op: click
select_dc_lifecycle_hook_tag_imagestream:
  elements:
  - selector:
      xpath: //div[contains(@id,'<hook_type>')]//div[contains(@ng-model,'istag.imageStream')]//span[@aria-label='Select box activate']
    op: click
  - selector:
      xpath: //div[contains(@id,'<hook_type>')]//div[contains(@ng-model,'istag.imageStream')]//ul[@role='listbox']//div[contains(normalize-space(),'<image_stream>')]
    op: click
select_dc_lifecycle_hook_tag_istag:
  elements:
  - selector:
      xpath: //div[contains(@id,'<hook_type>')]//div[contains(@ng-model,'istag.tagObject')]//span[@aria-label='Select box activate']
    op: click
  - selector:
      xpath: //div[contains(@id,'<hook_type>')]//div[contains(@ng-model,'istag.tagObject')]//input[@placeholder="Tag"]
    op: send_keys <istag>
  - selector:
      xpath: //div[contains(@id,'<hook_type>')]//div[contains(@ng-model,'istag.tagObject')]//ul[@role='listbox']//div[contains(normalize-space(),'<istag>')]
    op: click
set_dc_hook_command:
  element:
    selector:
      xpath: //div[contains(@id,'<hook_type>')]//input[contains(@id,'edit-command')]
    type: input
    op: send_keys <hook_cmd>
set_dc_hook_tag_as:
  action: select_dc_lifecycle_hook_tag_imagestream
  action: select_dc_lifecycle_hook_tag_istag
set_lifecycle_newpod_hook_action:
  element:
    selector:
      xpath: //div[contains(@id,'<hook_type>')]//input[contains(@name,'action-newpod')]
    op: click
set_lifecycle_images_hook_action:
  element:
    selector:
      xpath: //div[contains(@id,'<hook_type>')]//input[contains(@name,'action-images')]
    op: click
