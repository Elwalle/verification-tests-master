check_latest_deployment_version:
  action: goto_one_dc_page
  element:
    selector:
      xpath: //table[descendant::th[.='Deployment']]//tbody[1]//a[contains(text(),'<latest_deployment_version>')]
wait_latest_deployments_to_status:
  action: goto_one_dc_page
  element:
    selector:
      xpath: (//td[@data-title="Deployment"]/following-sibling::td[@data-title="Status"])[1][contains(.,'<status_name>')]
    timeout: 600
wait_latest_deployments_to_deployed:
  action: goto_one_dc_page
  element:
    selector:
      xpath: (//td[@data-title="Deployment"]/following-sibling::td[@data-title="Status"])[1][contains(.,Active)]
    timeout: 600
manually_deploy:
  action: goto_one_dc_page
  elements:
  - selector:
      xpath: //button[contains(text(),"Deploy") and not(@disabled)]
    type: button
    op: click
  - selector:
      xpath: //span[contains(text(),'has started')]
cancel_deployment_on_one_deployment_page:
  action: wait_cancel
  action: click_cancel
  element:
    selector:
      xpath: //dd[contains(normalize-space(),'Cancelled')]
edit_replicas_on_dc_page:
  action: goto_one_dc_page
  elements:
  - selector:
      xpath: //a[@title='Edit']
    type: a
    op: click
  - selector:
      xpath: //input[@name='desired']
    type: input
    op: clear
  - selector:
      xpath: //input[@name='desired']
    type: input
    op: send_keys <replicas>
  - selector:
      xpath: //a[@title="Scale"]
    type: a
    op: click
cancel_edit_replicas_on_dc_page:
  elements:
  - selector:
      xpath: //a[@title='Cancel']
    type: a
    op: click
edit_replicas_on_rc_page:
  action: goto_one_deployment_page
  elements:
  - selector:
      xpath: //a[@title='Edit']
    type: a
    op: click
  - selector:
      xpath: //input[@name='desired']
    type: input
    op: clear
  - selector:
      xpath: //input[@name='desired']
    type: input
    op: send_keys <replicas>
  - selector:
      xpath: //a[@title="Scale"]
    type: a
    op: click
cancel_edit_replicas_on_rc_page:
  elements:
  - selector:
      xpath: //a[@title='Cancel']
    type: a
    op: click
click_specific_no_of_deploy:
  action: goto_one_dc_page
  element:
    selector:
      xpath: //table[descendant::th[.='Deployment']]//a[contains(text(),'<deploy_number>')]
    op: click
    timeout: 60
rollback_all_components:
  action: click_rollback_button
  action: change_scale_settings
  action: change_strategy
  action: change_triggers
  action: click_rollback_button_in_settings
rollback_one_component:
  action: click_rollback_button
  action: change_triggers
  action: click_rollback_button_in_settings
rollback_two_components:
  action: click_rollback_button
  action: change_scale_settings
  action: change_strategy
  action: click_rollback_button_in_settings
rollback_none_components:
  action: click_rollback_button
  action: click_rollback_button_in_settings
click_rollback_button:
  element:
    selector:
      xpath: //button[contains(text(),"Roll Back") and not(@disabled)]
    type: button
    op: click
change_scale_settings:
  element:
    selector:
      xpath: //input[@ng-model='changeScaleSettings']
    op: click
change_strategy:
  element:
    selector:
      xpath: //input[@ng-model='changeStrategy']
    op: click
change_triggers:
  element:
    selector:
      xpath: //input[@ng-model='changeTriggers']
    op: click
click_rollback_button_in_settings:
  elements:
  - selector:
      xpath: //div[@ng-show='rollBackCollapsed']//button
    op: click
  - selector:
      xpath: //span[contains(text(),'is rolling back')]
goto_deployments_page:
  url: /console/project/<project_name>/browse/deployments
goto_one_dc_page:
  url: /console/project/<project_name>/browse/deployments/<dc_name>
goto_one_dc_environment_tab:
  action: goto_one_dc_page
  action: goto_environment_tab
goto_one_standalone_rc_page:
  url: /console/project/<project_name>/browse/deployments-replicationcontrollers/<rc_name>
goto_set_resource_limit_page:
  action: click_actions_button
  elements:
  - selector:
      xpath: //a[contains(text(), 'Set Resource Limits')]
    op: click
goto_health_check_page:
  action: click_actions_button
  elements:
  - selector:
      xpath: //a[contains(text(), 'Edit Health Checks')]
    op: click
goto_add_autoscaler_page:
  action: click_actions_button
  elements:
  - selector:
      xpath: //a[contains(text(), 'Add Autoscaler')]
    op: click
goto_edit_autoscaler_page:
  action: click_actions_button
  elements:
  - selector:
      xpath: //a[contains(text(), 'Edit Autoscaler')]
    op: click
check_dc_loaded_completely:
  action: goto_one_dc_page
  elements:
  - selector:
      text: Configuration
  - selector:
      text: Triggers
  - selector:
      text: Template
goto_one_deployment_page:
  url: /console/project/<project_name>/browse/deployments/<dc_name>/<dc_name>-<dc_number>
goto_one_deployment_environment_tab:
  action: goto_one_deployment_page
  action: goto_environment_tab
check_dc_strategy:
  action: check_dc_loaded_completely
  elements:
  - selector:
      xpath: //div[@ng-if="deploymentConfig.spec.strategy.type"]/dd[contains(.,'<dc_strategy>')]
check_dc_manual_cli_trigger:
  action: check_dc_loaded_completely
  elements:
  - selector:
      xpath:  //h3[contains(.,'Triggers')]//following::input[contains(@value,'oc deploy')]
check_dc_config_trigger:
  action: check_dc_loaded_completely
  elements:
  - selector:
      xpath: //dt[contains(.,"Change of")]/following-sibling::dd[contains(.,'<dc_config_change>')]
check_dc_selector:
  action: check_dc_loaded_completely
  elements:
  - selector:
      xpath: //dt[contains(.,'Selectors')]/following-sibling::dd[contains(.,'<dc_selectors_key>=<dc_selectors_value>')]
check_dc_replicas:
  action: check_dc_loaded_completely
  elements:
  - selector:
      xpath: //dt[contains(.,'Replicas')]/following-sibling::dd//span[contains(.,'<dc_replicas>')]
check_standalone_rc_replicas:
  action: goto_one_standalone_rc_page
  elements:
  - selector:
      xpath: //dt[contains(.,'Replicas')]/following-sibling::dd//span[contains(.,'<rc_replicas>')]
check_deployment_idle_text:
  action: goto_one_deployment_page
  elements:
  - selector:
      xpath: //deployment-donut//span[contains(.,'Idled')]
  - selector:
      xpath: //deployment-donut//a[contains(.,'Start <previous_replicas> pod')]
check_standalone_rc_idle_text:
  action: goto_one_standalone_rc_page
  elements:
  - selector:
      xpath: //deployment-donut//span[contains(.,'Idled')]
  - selector:
      xpath: //deployment-donut//a[contains(.,'Start <previous_replicas> pod')]
click_wake_up_option_on_rc_page:
  action: goto_one_standalone_rc_page
  elements:
  - selector:
      xpath: //deployment-donut//a[contains(.,'Start <previous_replicas> pod')]
    op: click
check_specific_deploy_selector:
  action: goto_one_deployment_page
  elements:
  - selector:
      xpath: //dt[contains(.,'Selectors')]/following-sibling::dd[contains(.,'<specific_deployment_selector>')]
check_dc_environment:
  action: goto_one_dc_environment_tab
  action: check_environment_tab
check_deployment_environment:
  action: goto_one_deployment_environment_tab
  action: check_environment_tab
add_autoscaler_set_max_pod_and_cpu_req_per_from_dc_page:
  action: goto_one_dc_page
  action: goto_add_autoscaler_page
  action: set_max_pod_on_autoscaler_page
  action: set_cpu_request_percentage
  action: click_save_button
add_label_on_edit_autoscaler_page:
  action: goto_one_dc_page
  action: goto_add_autoscaler_page
  action: set_min_pod_on_autoscaler_page
  action: set_max_pod_on_autoscaler_page
  action: set_cpu_request_percentage
  action: add_label_key_on_edit_autoscaler_page
  action: add_label_value_on_edit_autoscaler_page
  action: click_save_button
add_label_key_on_edit_autoscaler_page:
  elements:
  - selector:
      xpath: //div[@ng-if="(!cannotAdd) && addRowLink"]/a
    op: click
  - selector:
      xpath: //div[@ng-repeat="entry in entries"]/following-sibling::div//input[@placeholder="Name"]
    op: send_keys <label_key>
add_label_value_on_edit_autoscaler_page:
  elements:
  - selector:
      xpath: //div[@ng-repeat="entry in entries"]/following-sibling::div//input[@placeholder="Value"]
    op: send_keys <label_value>
set_min_pod_on_autoscaler_page:
  elements:
  - selector:
      xpath: //input[@name="minReplicas"]
    op: clear
  - selector:
      xpath: //input[@name="minReplicas"]
    op: send_keys <min_pods>
set_max_pod_on_autoscaler_page:
  elements:
  - selector:
      xpath: //input[@name="maxReplicas"]
    op: clear
  - selector:
      xpath: //input[@name="maxReplicas"]
    op: send_keys <max_pods>
set_cpu_request_percentage:
  elements:
  - selector:
      xpath: //input[@name="targetCPU"]
    op: clear
  - selector:
      xpath: //input[@name="targetCPU"]
    op: send_keys <cpu_req_per>
check_autoscaler_min_pods:
  element:
    selector:
      xpath: //hpa//dt[contains(.,'Min Pods')]/following::dd[1][contains(.,'<min_pods>')]
check_autoscaler_min_pods_for_dc:
  action: check_autoscaler_min_pods
check_autoscaler_min_pods_on_rc_page:
  action: goto_one_deployment_page
  action: check_autoscaler_min_pods
check_autoscaler_max_pods:
  element:
    selector:
      xpath: //hpa//dt[contains(.,'Max Pods')]/following::dd[1][contains(.,'<max_pods>')]
check_autoscaler_max_pods_on_rc_page:
  action: goto_one_deployment_page
  action: check_autoscaler_max_pods
check_autoscaler_cpu_request_target:
  element:
    selector:
      xpath: //hpa//dt[@ng-if-start="hpa.spec.cpuUtilization.targetPercentage"]/following::dd[1][contains(.,'<cpu_request_target>')]
check_autoscaler_cpu_request_target_on_rc_page:
  action: goto_one_deployment_page
  action: check_autoscaler_cpu_request_target
check_dc_link_in_autoscaler_on_rc_page:
  action: goto_one_deployment_page
  element:
    selector:
      xpath: //hpa//dt[contains(.,'Deployment Config')]/following::dd[1]/a[contains(.,'<dc_name>') and contains(@href, 'project/<project_name>/browse/deployments/<dc_name>')]
delete_autoscaler_from_dc_page:
  action: goto_one_dc_page
  action: click_remove_autoscaler_link
  action: click_delete
check_warning_info_for_rc_with_multiple_autoscale:
  action: goto_one_deployment_page
  elements:
  - selector:
      xpath: //div[contains(@class, "alert") and contains(.,"This deployment is scaled by both a deployment configuration and an autoscaler")]
  scripts:
  - command: return document.getElementsByTagName("hpa").length == 2
    expect_result: true
check_warning_info_when_create_hpa_without_metrics_and_cpu_request:
  action: goto_one_dc_page
  action: goto_add_autoscaler_page
  action: check_no_metrics_warning
  action: check_no_cpu_req_warning
check_warning_info_after_create_hpa_without_metrics_and_cpu_request:
  action: goto_one_dc_page
  action: check_no_metrics_warning
  action: check_no_cpu_req_warning
  action: click_edit_resource_link_in_warning_info
  action: check_edit_resource
click_edit_resource_link_in_warning_info:
  elements:
  - selector:
      xpath: //a[contains(.,'Set resource')]
    op: click
click_edit_autoscaler_link:
  element:
    selector:
      xpath: //hpa/descendant::a[text()='Edit']
    op: click
click_remove_autoscaler_link:
  element:
    selector:
      xpath: //hpa/descendant::a[text()='Remove']
    op: click
check_edit_resource:
  elements:
  - selector:
      xpath: //h1[contains(.,'Resource Limits')]
check_no_metrics_warning:
  elements:
  - selector:
      xpath: //div[contains(.,'Metrics might not be configured by your cluster administrator')]
  - selector:
      xpath: //div[contains(.,'Metrics are required for autoscaling')]
check_no_cpu_req_warning:
  elements:
  - selector:
      xpath: //div[contains(.,'This deployment config does not have any containers with a CPU')]
delete_label_on_edit_autoscaler_page:
  action: goto_one_dc_page
  action: goto_edit_autoscaler_page
  action: delete_label_value_on_edit_autoscaler_page
  action: click_save_button
delete_label_value_on_edit_autoscaler_page:
  elements:
  - selector:
      xpath: //div[contains(@class,'key-value-editor-input')]/input
  scripts:
    - command: |
             var label_key = "<label_key>";
             var rows = document.querySelectorAll('div[class~=key-value-editor-entry]');
             for (var i=0; i<rows.length; i++) {
               var inputs = rows[i].querySelectorAll('div[class~=key-value-editor-input] input');
               if (inputs[0].value == label_key) {
                 rows[i].querySelector(".key-value-editor-buttons a").click();
                 return true;
               }
             }
             return false
      expect_result: true
update_min_max_cpu_request_for_autoscaler_from_dc_page:
  action: goto_one_dc_page
  action: click_edit_autoscaler_link
  action: set_min_pod_on_autoscaler_page
  action: set_max_pod_on_autoscaler_page
  action: set_cpu_request_percentage
  action: click_save_button
update_label_on_edit_autoscaler_page:
  action: goto_one_dc_page
  action: goto_edit_autoscaler_page
  action: update_label_value_on_edit_autoscaler_page
  action: click_save_button
update_label_value_on_edit_autoscaler_page:
  elements:
  - selector: &label_value_field |
        var id = null
        var p = new RegExp("<label_key>");
        var el = document.getElementsByTagName("input");
        for (var i=0; i<el.length; i++) {
          if (p.test(el[i].value)) {
            id = el[i].id;
            break;
          }
        }
        if (id == null) return null;
        id = id.replace("-key-", "-value-");
        return document.getElementById(id);
    type: js
    op: clear
  - selector: *label_value_field
    type: js
    op: send_keys <new_label_value>
edit_env_var_key:
  elements:
  - selector: &env_var_key_field |
        var id = null
        var p = new RegExp("<env_var_value>");
        var el = document.getElementsByTagName("input");
        for (var i=0; i<el.length; i++) {
          if (p.test(el[i].value)) {
            id = el[i].id;
            break;
          }
        }
        if (id == null) return null;
        id = id.replace(/value(?!.*value)/, 'key');
        return document.getElementById(id);
    type: js
    op: clear
  - selector: *env_var_key_field
    type: js
    op: send_keys <new_env_key>
check_invalid_env_key_warning_message:
  elements:
  - selector: |
        var warn_messages = document.getElementsByTagName('span').filter(function(el) {
              return el.offsetWidth > 0 && el.textContent == "<message>";
            }),
            warn_message = (warn_messages.length == 1) ? warn_messages[0] : null,
            tooltip = (warn_messages != null) ? warn_message.nextElementSibling.firstElementChild : null;
        return tooltip;
    type: js
    op: hover
  - selector:
      xpath: //div[starts-with(text(),'A valid environment variable name is')]
