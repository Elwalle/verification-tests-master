--- # check browse/builds page
check_buildconfig_edit_page_disabled:
  elements:
  - selector:
      xpath: //button[contains(.,"Save") and @disabled]
  - selector:
      xpath: //fieldset[@disabled]
check_buildconfig_list_page:
  action: goto_builds_page
  element:
    selector:
      xpath: //table[descendant::th[text()="Name"]]
check_build_log_content:
  element:
    selector:
      xpath: //log-viewer[@resource="builds/log"]//td[contains(.,'<build_log_context>')]
    timeout: 300
check_build_log_tab:
  action: goto_one_build_page
  elements:
    - selector:
        xpath: //div[@ng-if='build']//uib-tab-heading[text()='Logs']
      op: click
    - selector:
        xpath: //div[@class='log-status']//span[contains(.,'<build_status_name>')]
      timeout: 300
check_one_buildconfig_page:
  action: goto_one_buildconfig_page
  element:
    selector:
      text: Summary
    type: a
show_annotations_in_bc_page:
  action: click_show_annotations
  elements:
  - selector:
      xpath: //td[contains(text(),"openshift.io/")]
  action: click_hide_annotations
check_one_buildconfig_page_with_check_config:
  action: goto_buildconfig_configuration_tab
  action: show_annotations_in_bc_page
  action: check_buildconfig_source_repo
  action: check_bc_generic_webhook_trigger
  action: check_bc_github_webhook_trigger
  elements:
  # Manual (CLI):
  - selector:
      xpath: //dt[contains(.,'Manual (CLI):')]
  - selector:
      xpath: //div/input[contains(@value,"oc start-build") and @readonly]
    type: input
check_one_buildconfig_page_with_build_op:
  action: check_one_buildconfig_page_with_check_config
  elements:
  - selector:
      text: Start Build
      class: btn-default
    type: button
    op: click
  - selector:
      xpath: //span[contains(., 'has started')]
check_one_build_inside_bc_page:
  # <bc_and_build_name> contains two "/",e.g. bc/build/
  action: goto_one_build_page
  elements:
  - selector:
      text: Show annotations
check_rebuild_button:
  elements:
  - selector:
      xpath: //button[@ng-click="cloneBuild()" and text()="Rebuild"]
cancel_build_from_pending_status:
  action: check_one_build_inside_bc_page
  elements:
  #- selector:
  #    xpath: //span[@ng-switch-when='New']
  #  optional: true
  - selector:
      xpath: //span[@ng-switch-when='Pending']
    optional: true
  - selector:
      text: Cancel Build
      class: btn-default
    op: click
    type: button
  - selector:
      text: Rebuild
      class: btn-default
    type: button
cancel_build_from_running_status:
  action: check_one_build_inside_bc_page
  elements:
  - selector:
      xpath: //span[@ng-switch-when='Running']
  - selector:
      text: Cancel Build
      class: btn-default
    op: click
    type: button
  - selector:
      text: Rebuild
      class: btn-default
    type: button
goto_builds_page:
  url: /console/project/<project_name>/browse/builds
goto_one_buildconfig_page:
  url: /console/project/<project_name>/browse/builds/<bc_name>
goto_one_build_page:
  url: /console/project/<project_name>/browse/builds/<bc_and_build_name>
goto_buildconfig_edit_page:
  url: /console/project/<project_name>/edit/builds/<bc_name>
goto_buildconfig_configuration_tab:
  action: goto_one_buildconfig_page
  elements:
  - selector:
      xpath: //uib-tab-heading[contains(.,'Configuration')]
    op: click
  - selector:
      xpath: //h3[contains(.,'Configuration')]
  - selector:
      xpath: //h3[contains(.,'Triggers')]
click_start_build_button:
  element:
    selector:
      text: Start Build
      class: btn-default
    type: button
    op: click
start_build_base_on_buildconfig:
  action: check_one_buildconfig_page
  action: click_start_build_button
wait_latest_build_to_status:
  action: goto_one_buildconfig_page
  element:
    selector:
      xpath: //span[@class='latest-build-status']/span[contains(.,'<build_status>')]
    timeout: 600
check_buildconfig_environment:
  action: goto_buildconfig_environment_tab
  action: check_environment_tab
check_build_environment:
  action: goto_build_environment_tab
  action: check_environment_tab
check_environment_tab:
  elements:
  - selector:
      xpath: //div[contains(@class,'key-value-editor-input')]/input
  scripts:
    - command: |
             var key = "<env_var_key>"
             var value = "<env_var_value>"
             var rows = document.querySelectorAll('div[class~=key-value-editor-entry]')
             for (var i =0; i< rows.length; i++) {
                 var inputs = rows[i].querySelectorAll('div[class~=key-value-editor-input] input')
                     if (inputs.length == 2 && inputs[0].value == key && inputs[1].value == value) {
                           return true
                               }
             }
             return false
      expect_result: true
check_env_var_missing:
  elements:
  - selector:
      xpath: //div[contains(@class,'key-value-editor-input')]/input
  scripts:
    - command: |
            var key = "<env_var_key>",
                value = "<env_var_value>",
                rows = document.querySelectorAll('div[class~=key-value-editor-entry]'),
                inputs = [];
            for (var i =0; i< rows.length; i++) {
              inputs = rows[i].querySelectorAll('div[class~=key-value-editor-input] input');
              if (inputs.length == 2 && inputs[0].value == key && inputs[1].value == value) {
                return false;
              }
            }
            return true;
      expect_result: true
check_empty_buildconfig_environment:
  action: goto_buildconfig_environment_tab
  elements:
  - selector:
      xpath: //div[contains(@class,'key-value-editor-entry')]
  scripts:
    - command: |
             var rows = document.querySelectorAll('div[class~=key-value-editor-entry]')
             for (var i =0; i< rows.length; i++) {
                 var inputs = rows[i].querySelectorAll('div[class~=key-value-editor-input] input')
                     if (inputs.length == 2 && (inputs[0].value != "" || inputs[1].value != "")) {
                           return false
                               }
             }
             return true
      expect_result: true
check_buildconfig_dockerfile_config:
  action: goto_buildconfig_configuration_tab
  elements:
  - selector:
      xpath: //dt[contains(.,'Dockerfile')]/following-sibling::div[contains(.,'<docker_file_content>')]
check_build_strategy:
  action: goto_buildconfig_configuration_tab
  elements:
  - selector:
      xpath: //dt[contains(.,'Build strategy')]/following-sibling::dd[contains(.,'<build_strategy>')]
check_build_trigger:
  action: goto_one_build_page
  elements:
  - selector:
      xpath: //dt[contains(.,'Triggered by:')]/following-sibling::dd[contains(normalize-space(),'<trigger_info>')]
check_build_hidden_secret:
  action: goto_one_build_page
  elements:
  - selector:
      xpath: //dt[contains(.,'Triggered by:')]/following-sibling::dd//a[contains(.,'show obfuscated secret')]
    op: click
  - selector:
      xpath: //dt[contains(.,'Triggered by:')]/following-sibling::dd[contains(.,'<hidden_text>')]
enable_webhook_build_trigger:
  action: check_buildconfig_edit_page_loaded_completely
  elements:
  - selector:
      xpath: //input[@ng-model="triggers.present.webhook"]
    op: click
goto_buildconfig_environment_tab:
  action: goto_one_buildconfig_page
  action: goto_environment_tab
goto_build_environment_tab:
  action: goto_one_build_page
  action: goto_environment_tab
goto_environment_tab:
  elements:
  - selector:
      xpath: //uib-tab-heading[contains(.,'Environment')]
    op: click
  - selector:
      xpath: //environment
    optional: true
delete_env_vars_on_buildconfig_edit_page:
  action: check_buildconfig_edit_page_loaded_completely
  action: delete_env_var
delete_env_var:
  elements:
  - selector:
      xpath: //div[contains(@class,'key-value-editor-input')]/input
  scripts:
    - command: |
             var key = "<env_var_key>"
             var rows = document.querySelectorAll('div[class~=key-value-editor-entry]')
             for (var i =0; i< rows.length; i++) {
                 var inputs = rows[i].querySelectorAll('div[class~=key-value-editor-input] input')
                 if (inputs.length==2 && inputs[0].value == key) {
                     rows[i].querySelector(".key-value-editor-buttons a").click()
                     return true
                 }
             }
             return false
      expect_result: true
count_buildconfig_image_paths:
  action: goto_buildconfig_configuration_tab
  scripts:
  - command: return document.getElementsByClassName("is-item-description").length == <image_path_count>
    expect_result: true
check_buildconfig_source_repo:
  action: goto_buildconfig_configuration_tab
  elements:
  - selector:
      xpath: //dt[contains(.,'Source repo')]/following::a[contains(.,'<source_repo_url>')]
check_none_buildconfig_source_repo:
  action: goto_buildconfig_configuration_tab
  elements:
  - selector:
      xpath: //dt[contains(.,'Source')]/following::i[contains(.,"none")]
check_buildconfig_edit_page_loaded_completely:
  action: goto_buildconfig_edit_page
  elements:
  - selector:
      xpath: //h3[contains(.,'Source Configuration')]
  - selector:
      xpath: //h3[contains(.,'Image Configuration')]
  - selector:
      xpath: //h3[contains(.,'Environment Variables')]
  - selector:
      xpath: //h3[contains(.,'Triggers')]
add_bc_source_and_destination_paths:
  action: check_buildconfig_edit_page_loaded_completely
  action: choose_image_source_from
  action: choose_image_source_namespace
  action: choose_image_source_is
  action: choose_image_source_tag
  action: add_image_source_path
  action: add_image_source_dest_path
  action: click_save_button
change_bc_source_repo_url:
  action: check_buildconfig_edit_page_loaded_completely
  action: change_source_repo_url
add_env_vars_on_buildconfig_edit_page:
  action: check_buildconfig_edit_page_loaded_completely
  action: add_env_vars
add_env_vars:
  action: add_new_env_var
  action: add_env_var_key
  action: add_env_var_value
  action: save_env_vars
choose_image_source_from:
  elements:
  - selector:
      xpath: //select[@ng-model='imageSourceOptions.pickedType']//option[contains(.,'<image_source_from>')]
    op: click
choose_image_source_namespace:
  elements:
  - selector:
      xpath: //select[@name='imageSourceNamespace']//option[contains(.,'<image_source_namespace>')]
    op: click
choose_image_source_is:
  elements:
  - selector:
      xpath: //select[@name='imageSourceImageStream']//option[contains(.,'<image_source_is>')]
    op: click
choose_image_source_tag:
  elements:
  - selector:
      xpath: //select[@name='imageSourceTag']//option[contains(.,'<image_source_tag>')]
add_image_source_path:
  elements:
  - selector:
      xpath: //a[contains(.,'Add image source path')]
    op: click
  - selector:
      xpath: //key-value-editor[@entries='imageSourcePaths']//div[contains(@class,'key-value-editor-entry')][count(//key-value-editor[@entries='imageSourcePaths']//div[contains(@class,'key-value-editor-entry')])-1]//input[@placeholder="Source Path"]
    op: send_keys <source_path>
add_image_source_dest_path:
  elements:
  - selector:
      xpath: //key-value-editor[@entries='imageSourcePaths']//div[contains(@class,'key-value-editor-entry')][count(//key-value-editor[@entries='imageSourcePaths']//div[contains(@class,'key-value-editor-entry')])-1]//input[@placeholder="Destination Dir"]
    op: send_keys <dest_dir>
change_source_repo_url:
  elements:
  - selector:
      xpath: //input[@name='sourceUrl']
    op: clear
  - selector:
      xpath: //input[@name='sourceUrl']
    op: send_keys <changing_source_repo_url>
add_new_env_var:
  element:
    selector:
      xpath: //div[@ng-if="(!cannotAdd) && addRowLink"]/a
    op: click
add_env_var_key:
  element:
    selector:
      xpath: //div[@ng-repeat="entry in entries"][count(//div[@ng-repeat="entry in entries"])]/div[1]/input
    op: send_keys <env_var_key>
add_env_var_value:
  element:
    selector:
      xpath: //div[@ng-repeat="entry in entries"][count(//div[@ng-repeat="entry in entries"])]/div[2]//input
    op: send_keys <env_var_value>
save_env_vars: {}
check_invalid_url_warn_message:
  elements:
  - selector:
      xpath: //span[@ng-if='alert.details' and contains(.,'uri is not a valid url')]
check_outdated_bc_warn_message:
  elements:
  - selector:
      xpath: //span[contains(.,'object has been modified')]
check_deleted_bc_warn_message:
  elements:
  - selector:
      xpath: //span[@ng-if='alert.message' and contains(.,'This build configuration has been deleted')]
check_build_has_started_message:
  elements:
  - selector:
      xpath: //span[@ng-if='alert.message' and contains(.,'has started')]
check_bc_builder_image_stream:
  action: goto_buildconfig_configuration_tab
  elements:
  - selector:
      xpath: //dt[contains(.,'Builder image stream')]/following-sibling::dd[contains(.,'<builder_image_streams>')]
check_bc_output:
  action: goto_buildconfig_configuration_tab
  elements:
  - selector:
      xpath: //dt[contains(.,'Output to')]/following-sibling::dd[contains(.,'<bc_output>')]
check_github_webhook_trigger:
  element:
    selector:
      xpath: //input[contains(@value,'<github_webhook_trigger>') and @readonly]
check_generic_webhook_trigger:
  element:
    selector:
      xpath: //input[contains(@value,'<generic_webhook_trigger>') and @readonly]
check_bc_github_webhook_trigger:
  action: goto_buildconfig_configuration_tab
  action: check_github_webhook_trigger
check_bc_github_webhook_trigger_on_bc_edit_page:
  action: goto_buildconfig_edit_page
  action: check_github_webhook_trigger
check_bc_generic_webhook_trigger:
  action: goto_buildconfig_configuration_tab
  action: check_generic_webhook_trigger
check_bc_generic_webhook_trigger_on_bc_edit_page:
  action: goto_buildconfig_edit_page
  action: check_generic_webhook_trigger
check_bc_image_change_trigger:
  action: goto_buildconfig_configuration_tab
  elements:
  - selector:
      xpath: //dt[contains(.,'New image for')]/following-sibling::dd[contains(.,'<image_change_trigger>')]
check_bc_config_change_trigger:
  action: goto_buildconfig_configuration_tab
  elements:
  - selector:
      xpath: //dt[contains(.,'Config change for')]/following-sibling::dd[contains(.,'<config_change_trigger>')]
check_bc_config_change_trigger_exist:
  action: goto_buildconfig_configuration_tab
  elements:
  - selector:
      xpath: //dt[contains(.,'Configchange for')]
choose_build_image_source_to_docker_image:
  action: check_buildconfig_edit_page_loaded_completely
  elements:
  - selector:
      xpath: //select[@ng-model='builderOptions.pickedType']//option[contains(.,'Docker Image')]
    op: click
choose_build_image_source_to_image_stream_image:
  action: check_buildconfig_edit_page_loaded_completely
  elements:
  - selector:
      xpath: //select[@ng-model='builderOptions.pickedType']//option[contains(.,'Stream Image')]
    op: click
add_docker_image_link:
  elements:
  - selector:
      xpath: //input[@ng-model='builderOptions.pickedDockerImage']
    op: clear
  - selector:
      xpath: //input[@ng-model='builderOptions.pickedDockerImage']
    op: send_keys <docker_image_link>
edit_build_image_to_docker_image:
  action: choose_build_image_source_to_docker_image
  action: add_docker_image_link
edit_env_var_value:
  elements:
  - selector: &env_var_value_field |
        var id = null
        var p = new RegExp("<env_variable_name>");
        var el = document.getElementsByTagName("input");
        for (var i=0; i<el.length; i++) {
          if (p.test(el[i].value)) {
            id = el[i].id;
            break;
          }
        }
        if (id == null) return null;
        id = id.replace("-key-", "-value-");
        return document.getElementById(id);
    type: js
    op: clear
  - selector: *env_var_value_field
    type: js
    op: send_keys <new_env_value>
reorder_environment_variable:
  scripts:
  - file: jquery.simulate.drag-sortable
    expect_result: true
  - command: |
        var id = null,
            p = new RegExp("<env_variable_name>"),
            el = document.getElementsByTagName("input"),
            div_el = {},
            offset = parseInt("<offset>");
            move = ("<direction>" == "down") ? offset : -1*offset;
        for (var i=0; i<el.length; i++) {
          if (p.test(el[i].value)) {
            res_el = el[i];
            break;
          }
        }
        if (res_el.id == null) return null;
        div_el = res_el.parentElement.parentElement;
        $(div_el).simulateDragSortable({ move: move, handle: ".as-sortable-item-handle"});
        return true;
    expect_result: true
check_environment_variables_order:
  scripts:
  - command: |
        var patterns = "<env_vars_order>".split(",").map(function(v){return new RegExp(v);}),
            els = document.getElementsByTagName("input").filter(function(el){return el.id.startsWith("key-value-editor-key");})
        for (var i=0; i<els.length; i++) {
          if (patterns[0].test(els[i].value)) {
            if (patterns.length == 1) {
              return true;
            }
            patterns.shift()
          }
        }
        return false;
    expect_result: true
check_bc_environment_variables_order:
  action: goto_buildconfig_environment_tab
  action: check_environment_variables_order
save_updated_env_value: {}
change_env_vars_on_buildconfig_edit_page:
  action: check_buildconfig_edit_page_loaded_completely
  action: change_env_vars
change_env_vars:
  action: edit_env_var_value
  action: save_updated_env_value
set_force_pull_on_buildconfig_edit_page:
  action: check_buildconfig_edit_page_loaded_completely
  elements:
  - selector:
      xpath: //input[@ng-model='options.forcePull']
    op: click
toggle_config_change_trigger_on_bc_edit_page:
  action: change_bc_run_policy_to_parallel
  action: change_bc_run_policy_to_serial
change_bc_run_policy_to_parallel:
  elements:
  - selector:
      xpath: //select[@ng-model="updatedBuildConfig.spec.runPolicy"]/option[contains(.,'Parallel')]
    op: click
change_bc_run_policy_to_serial:
  elements:
  - selector:
      xpath: //select[@ng-model="updatedBuildConfig.spec.runPolicy"]/option[contains(.,'Serial')]
    op: click
toggle_image_change_trigger_on_bc_edit_page:
  elements:
  - selector:
      xpath: //input[@ng-model="triggers.builderImageChangeTrigger.present"]
    op: click
toggle_cache_on_bc_edit_page:
  elements:
  - selector:
      xpath: //input[@ng-model="options.noCache"]
    op: click
change_bc_source_repo_ref_on_bc_edit_page:
  elements:
  - selector:
      xpath: //input[@name="sourceRef"]
    op: clear
  - selector:
      xpath: //input[@name="sourceRef"]
    op: send_keys <source_repo_ref>
change_bc_source_context_dir_on_bc_edit_page:
  elements:
  - selector:
      xpath: //input[@name="sourceContextDir"]
    op: clear
  - selector:
      xpath: //input[@name="sourceContextDir"]
    op: send_keys <source_context_dir>
add_image_stream_image_on_bc_edit_page:
  elements:
  - selector:
      xpath: //input[@ng-model="builderOptions.pickedImageStreamImage"]
    op: clear
  - selector:
      xpath: //input[@ng-model="builderOptions.pickedImageStreamImage"]
    op: send_keys <image_stream_image>
check_bc_source_ref:
  action: goto_buildconfig_configuration_tab
  elements:
  - selector:
      xpath: //dd[@ng-if="buildConfig.spec.source.git.ref" and contains(.,'<source_ref>')]
check_bc_source_context_dir:
  action: goto_buildconfig_configuration_tab
  elements:
  - selector:
      xpath: //dd[@ng-if="buildConfig.spec.source.contextDir" and contains(.,'<source_context_dir>')]
check_info_for_no_source_on_edit_page:
  action: goto_buildconfig_edit_page
  elements:
  - selector:
      xpath: //i[contains(.,"No source inputs have been defined for this build configuration")]
toggle_bc_config_change:
  action: check_buildconfig_edit_page_loaded_completely
  action: toggle_config_change_trigger_on_bc_edit_page
toggle_bc_image_change:
  action: check_buildconfig_edit_page_loaded_completely
  action: toggle_image_change_trigger_on_bc_edit_page
toggle_bc_cache:
  action: check_buildconfig_edit_page_loaded_completely
  action: toggle_cache_on_bc_edit_page
edit_bc_source_repo_ref:
  action: check_buildconfig_edit_page_loaded_completely
  action: change_bc_source_repo_ref_on_bc_edit_page
edit_bc_source_context_dir:
  action: check_buildconfig_edit_page_loaded_completely
  action: change_bc_source_context_dir_on_bc_edit_page
edit_build_image_to_image_stream_image:
  action: choose_build_image_source_to_image_stream_image
  action: add_image_stream_image_on_bc_edit_page
change_bc_output_image_to_image_stream_tag:
  action: check_buildconfig_edit_page_loaded_completely
  action: choose_bc_output_image_option_to_image_stream
  action: choose_output_image_namespace
  action: choose_output_image_is
  action: set_output_image_tag
change_bc_output_image_to_docker_image_link:
  action: check_buildconfig_edit_page_loaded_completely
  action: choose_bc_output_image_option_to_docker_image
  action: set_output_docker_image_link
change_bc_output_image_to_none:
  action: check_buildconfig_edit_page_loaded_completely
  action: choose_bc_output_image_option_to_none
edit_bc_binary_input:
  action: check_buildconfig_edit_page_loaded_completely
  action: change_bc_binary_input
choose_bc_output_image_option_to_docker_image:
  elements:
  - selector:
      xpath: //select[@ng-model="outputOptions.pickedType"]/option[contains(.,'Docker Image')]
    op: click
choose_bc_output_image_option_to_image_stream:
  elements:
  - selector:
      xpath: //select[@ng-model="outputOptions.pickedType"]/option[contains(.,'Stream Tag')]
    op: click
choose_bc_output_image_option_to_none:
  elements:
  - selector:
      xpath: //select[@ng-model="outputOptions.pickedType"]/option[contains(.,'None')]
    op: click
choose_output_image_namespace:
  elements:
  - selector:
      xpath: //select[@ng-model="outputOptions.pickedNamespace"]/option[contains(.,'<output_image_namespace>')]
    op: click
choose_output_image_is:
  elements:
  - selector:
      xpath: //select[@ng-model="outputOptions.pickedImageStream"]/option[contains(.,'<output_image_is>')]
    op: click
set_output_image_tag:
  elements:
  - selector:
      xpath: //input[@ng-model="outputOptions.pickedTag"]
    op: clear
  - selector:
      xpath: //input[@ng-model="outputOptions.pickedTag"]
    op: send_keys <output_image_tag>
set_output_docker_image_link:
  elements:
  - selector:
      xpath: //input[@ng-model="outputOptions.pickedDockerImage"]
    op: clear
  - selector:
      xpath: //input[@ng-model="outputOptions.pickedDockerImage"]
    op: send_keys <output_docker_image_link>
change_bc_binary_input:
  elements:
  - selector:
      id: binaryAsBuild
    type: input
    op: clear
  - selector:
      id: binaryAsBuild
    type: input
    op: send_keys <bc_binary>
check_start_build_button_not_disabled:
  elements:
  - selector:
      xpath: //button[@ng-click="startBuild()" and not(@disabled)]
check_bc_runpolicy:
  action: goto_buildconfig_configuration_tab
  action: check_runPolicy
check_runPolicy:
  elements:
  - selector:
      xpath: //div[@class="run-policy"]//dd[contains(., "<run_policy>")]
check_one_build_status:
  elements:
  - selector:
      xpath:  //a[contains(., "#<number>")]/ancestor::tr/td[contains(., "<status>")]
    timeout: 180
