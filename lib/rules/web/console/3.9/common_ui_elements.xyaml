wait_cancel:
  element:
    selector:
      xpath: //button[contains(.,"Cancel")]
    timeout: 60
check_create_button_disabled:
  elements:
  - selector:
      xpath: //button[@disabled='disabled' and normalize-space(text())='Create']
check_next_step_button_disabled:
  element:
    selector:
      xpath: //button[@id='nextButton' and @disabled='disabled']
check_error_for_invalid_value:
  elements:
    - selector:
          xpath: //div[contains(.,"must consist of lower-case letters, numbers, periods, and hyphens")]
    - selector:
          xpath: //div[contains(.,"must start and end with a letter or a number")]
check_error_for_long_value:
  elements:
    - selector:
          xpath: //span[contains(.,"n't be longer than 253 characters")]
check_save_button_disabled:
  elements:
  - selector:
      xpath: //button[@disabled='disabled' and text()='Save']
check_filtered_resource_entry:
  element: &check_filtered_resource_entry
    selector:
      xpath: //table//td[a[contains(normalize-space(),'<resource_name>')]]
check_filtered_resource_entry_missing:
  element:
    <<: *check_filtered_resource_entry
    missing: true
choose_resource_type:
  elements:
  - selector:
      xpath: //div[@title='Choose a resource']
    op: click
  - selector:
      xpath: //div[span/div[text()='<resource_type>']]
    op: click
click_actions_button:
  elements:
  - selector:
      visible_text: !ruby/regexp '/Actions/'
    type: button
    op: click
click_add:
  element:
    selector:
      xpath: //a[text()="Add" and not(@disabled)]
    op: click
click_add_button:
  element:
    selector:
      xpath: //button[contains(text(),"Add") and not(@disabled)]
    op: click
click_bind:
  element:
    selector:
      xpath: //button[contains(text(),"Bind") and not(@disabled)]
    op: click
click_create_button:
  elements:
  - selector:
      xpath: //button[contains(text(),"Create") and not(@disabled)]
    type: button
    op: click
click_cancel:
  element:
    selector:
      text: Cancel
    op: click
click_close:
  element:
    selector:
      xpath: //*[text()='Close']
    op: click
check_close_x:
  element: &close_x
    selector:
      text: x
    type: button
click_close_x:
  element:
    <<: *close_x
    op: click
click_on_configuration_tab:
  element: &configuration_tab_link
    selector:
      xpath: //uib-tab-heading[contains(.,'Configuration')]
    op: click
click_on_hisory_tab:
  element:
    selector:
      xpath: //uib-tab-heading[contains(.,'History')]
    op: click
click_on_details_tab:
  element:
    selector:
      xpath: //uib-tab-heading[contains(.,'Details')]
    op: click
click_on_events_tab:
  element:
    selector:
      xpath: //uib-tab-heading[contains(.,'Events')]
    op: click
click_on_history_tab:
  element:
    selector:
      xpath: //uib-tab-heading[contains(.,'History')]
    op: click
click_on_logs_tab:
  element:
    selector:
      xpath: //uib-tab-heading[contains(.,'Logs')]
    op: click
click_on_terminal_tab:
  element:
    selector:
      xpath: //uib-tab-heading[contains(.,'Terminal')]
    op: click
click_deploy_image:
  element:
    selector:
      text: Deploy Image
    type: a
    op: click
click_deploy_button:
  element:
    selector:
      xpath: //button[contains(text(),"Deploy") and not(@disabled)]
    type: button
    op: click
click_import_yaml_json:
  element:
    selector:
      text: Import YAML / JSON
    type: a
    op: click
click_somewhere_out_of_focus:
  action: click_help_menu
click_somewhere_out_of_focus_for_wizard:
  elements:
  - selector:
      text: Results
    op: click
click_delete:
  elements:
  - selector:
      text: Delete
    op: click
click_hide_annotations:
  elements:
  - selector:
      text: Hide Annotations
    op: click
click_show_annotations:
  elements:
  - selector:
      text: Show Annotations
    op: click
check_annotation:
  element:
    selector:
      xpath: //div[contains(@ng-if,'annotations')]//tr[td[contains(@class,'key') and text()='<key>'] and td[contains(@class,'value') and contains(.,'<value>')]]
click_edit:
  element:
    selector:
      xpath: //a[text()='Edit']
    op: click
click_edit_YAML:
  element:
    selector:
      xpath: //a[text()='Edit YAML']
    op: click
check_page_contain_text:
  element:
    selector:
      xpath: //*[contains(.,'<text>')]
    timeout: 30
check_page_not_contain_text:
  element:
    selector:
      visible_text: !ruby/regexp /<text>/
    missing: true
    timeout: 20
click_remove_button:
  element:
    selector:
      xpath: //button[contains(text(),"Remove") and not(@disabled)]
    op: click
click_continue_button:
  element:
    selector:
      text: Continue
    op: click
    type: button
check_before_button:
  element: &before_button
    selector:
      xpath: //button[contains(.,"Back") and not(@disabled)]
check_before_button_missing:
  element:
    <<: *before_button
    missing: true
click_before_button:
  element:
    <<: *before_button
    op: click
    timeout: 300
check_next_button:
  element: &next_button
    selector:
      xpath: //button[contains(.,"Next") and not(@disabled)]
    timeout: 300
check_next_button_missing:
  element:
    <<: *next_button
    missing: true
click_next_button:
  element:
    <<: *next_button
    op: click
    timeout: 300
click_done_button:
  element:
    selector:
      xpath: //button[contains(.,"Done") and not(@disabled)]
    op: click
click_save_button:
  elements:
  - selector:
      visible_text: !ruby/regexp /Save/
    type: button
    op: click
click_view_details:
  element:
    selector:
      text: View Details
    type: a
    op: click
click_reveal:
  element:
    selector:
      visible_text: !ruby/regexp '/Reveal/'
    type: a
    op: click
click_hide:
  element:
    selector:
      visible_text: !ruby/regexp '/Hide/'
    type: a
    op: click
click_to_goto_edit_YAML_page:
  action: click_actions_button
  action: click_edit_YAML
click_to_goto_edit_page:
  action: click_actions_button
  action: click_edit
delete_resource:
  action: click_actions_button
  action: click_delete
  action: click_delete
click_ok:
  element:
    selector:
      text: OK
    op: click
click_user_dropdown:
  element:
    selector:
      id: user-dropdown
    op: click
close_all_toast_notifications:
  scripts:
  - command: |
        document.querySelectorAll('toast-notifications div.toast-pf').forEach(
          function(toast) {
            toast.querySelector('button').click();
          }
        );
        return true;
    expect_result: true
  element:
    selector:
      xpath: //toast-notifications//div[contains(@class,'toast-pf')]
    missing: true
click_help_menu:
  element:
    selector:
      id: help-dropdown
    op: click
close_second_level_navigation:
  element:
    selector:
      id: help-dropdown
    op: hover
  element:
    selector:
      class: nav-pf-secondary-nav
    missing: true
click_cancel_button:
  elements:
  - selector:
      xpath: //button[contains(.,"Cancel")]
    op: click
check_successful_info_for_adding:
  element:
    selector:
      xpath: //span[contains(.,"Successfully added")]
confirm_resource_deletion:
  elements:
  - selector:
      xpath: //button[text()='Delete']
    op: click
cancel_resource_deletion:
  elements:
  - selector:
      text: Cancel
    type: button
    op: click
keep_parameters_in_dialog:
  elements:
  - selector:
      visible_text: !ruby/regexp /Keep.*parameters?/
  - selector:
      visible_text: !ruby/regexp /Yes/
    type: button
    op: click
not_keep_parameters_in_dialog:
  elements:
  - selector:
      visible_text: !ruby/regexp /Keep.*parameters?/
  - selector:
      visible_text: !ruby/regexp /No/
    type: button
    op: click
set_item_key:
  elements:
  - selector:
      xpath: (//div[@ng-repeat='item in data'])[last()]//input[contains(@id,'key')]
    op: send_keys <item_key>
type_item_value:
  element:
    selector:
      xpath: (//div[contains(@id,'value')])[last()]//textarea
    type: textarea
    visible: false
    op: set <item_value>
