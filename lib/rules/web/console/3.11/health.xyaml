#---check health/probes page
add_another_arg_of_command_probe:
  elements:
  - selector:
      xpath: //h2[text()='Container <container_name>']/following-sibling::div[@ng-if='container.<health_kind>Probe']//input[contains(@id,'edit-command')]
    op: send_keys <command_arg>
  - selector:
      xpath: //h2[text()='Container <container_name>']/following-sibling::div[@ng-if='container.<health_kind>Probe']//span[@class='input-group']//a[text()='Add']
    op: click
click_to_add_probe:
  element:
    selector:
      xpath: //h2[text()='Container <container_name>']/following-sibling::div/a[contains(.,'Add') and contains(., substring('<health_kind>', 2))]
    op: click
click_probe_type_from_list:
  element:
    selector:
      xpath: //h2[text()='Container <container_name>']/following-sibling::div[@ng-if='container.<health_kind>Probe']//ul//span[contains(.,'<probe_type>')]
    op: click
click_probe_port_from_list:
  element:
    selector:
      xpath: //h2[text()='Container <container_name>']/following-sibling::div[@ng-if='container.<health_kind>Probe']//ul//span[text()='<port>']
    op: click
check_health_alert:
  element:
    selector:
      text: Not all containers have health checks
check_readiness_probe:
  element:
    selector:
      xpath: |-
        //div[contains(normalize-space(),'<container_name>')]/following-sibling::div[contains(normalize-space(), '<readiness_probe>')]
check_liveness_probe:
  element:
    selector:
      xpath: |-
        //div[contains(normalize-space(),'<container_name>')]/following-sibling::div[contains(normalize-space(), '<liveness_probe>')]
input_http_probe_path:
  element:
    selector:
      xpath: //h2[text()='Container <container_name>']/following-sibling::div[@ng-if='container.<health_kind>Probe']//input[contains(@id,'path')]
    op: send_keys <path>
remove_probe:
  element:
    selector:
      xpath: //h2[text()='Container <container_name>']/following-sibling::div//a[contains(.,'Remove') and contains(., substring('<health_kind>', 2))]
    op: click
set_initial_delay:
  elements:
  - selector:
       xpath: //input[@name='initialDelaySeconds']
    op: clear
  - selector:
       xpath: //input[@name='initialDelaySeconds']
    op: send_keys <initial_delay_seconds>
set_timeout:
  elements:
  - selector:
      xpath: //input[@name='timeoutSeconds']
    op: clear
  - selector:
      xpath: //input[@name='timeoutSeconds']
    op: send_keys <timeout>
show_probe_type_list:
  element:
    selector:
      xpath: //h2[text()='Container <container_name>']/following-sibling::div[@ng-if='container.<health_kind>Probe']//label[text()='Type']/following-sibling::div//span[contains(@class,'ui-select-toggle')]
    op: click
show_probe_port_list:
  element:
    selector:
      xpath: //h2[text()='Container <container_name>']/following-sibling::div[@ng-if='container.<health_kind>Probe']//label[text()='Port']/following-sibling::div//span[contains(@class,'ui-select-toggle')]
    op: click
add_http_probe:
  action: click_to_add_probe
  action: select_probe_type
  action: input_http_probe_path
  action: select_probe_port
add_command_probe:
  action: click_to_add_probe
  action: select_probe_type
  action: add_another_arg_of_command_probe
add_socket_probe:
  action: click_to_add_probe
  action: select_probe_type
  action: select_probe_port
add_socket_probe_and_define_delay_and_timeout:
  action: click_to_add_probe
  action: select_probe_type
  action: select_probe_port
  action: set_initial_delay
  action: set_timeout
check_health_probe:
  action: check_readiness_probe
  action: check_liveness_probe
goto_check_k8s_deployment_health_probe:
  action: click_on_configuration_tab
select_probe_type:
  action: show_probe_type_list
  action: click_probe_type_from_list
select_probe_port:
  action: show_probe_port_list
  action: click_probe_port_from_list
switch_dc_health_check_tab:
  action: click_on_configuration_tab
