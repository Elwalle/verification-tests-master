#---------Edit route on web ------------
edit_route_with_path:
  action: goto_one_route_page
  action: click_to_goto_edit_page
  action: set_path
  action: save_edit_route
  action: check_path_on_route_page
cancel_edit_route_with_path:
  action: goto_one_route_page
  action: click_to_goto_edit_page
  action: set_path
  action: cancel_edit_route
check_edit_route_with_invalid_path:
  action: goto_one_route_page
  action: click_to_goto_edit_page
  action: set_path
  action: show_options_for_secure_route
  action: check_warning_info_for_path
  action: check_save_button_disabled
edit_route_with_hostname:
  action: goto_one_route_page
  action: click_to_goto_edit_page
  action: set_hostname
edit_route_to_tls_termination:
  action: goto_one_route_page
  action: click_to_goto_edit_page
  action: show_options_for_secure_route
  action: set_tls_termination
  action: save_edit_route
  action: check_termination_type_on_route_page
edit_route_to_other_tls_termination:
  action: goto_one_route_page
  action: click_to_goto_edit_page
  action: set_tls_termination
  action: save_edit_route
  action: check_termination_type_on_route_page
update_route_point_to_three_services:
  action: goto_one_route_page
  action: click_to_goto_edit_page
  action: split_traffic_across_multiple_services
  action: click_edit_weights_as_integers
  action: set_the_first_service_to_route
  action: set_the_second_service_to_route
  action: expand_add_another_service
  action: set_the_third_service_to_route
  action: save_edit_route
  action: check_three_services_weight_on_route_page
remove_service_from_route:
  action: goto_one_route_page
  action: click_to_goto_edit_page
  action: remove_a_service_from_route
  action: save_edit_route
remove_and_keep_one_service_for_route:
  action: goto_one_route_page
  action: click_to_goto_edit_page
  action: remove_a_service_from_route
  action: save_edit_route
  action: check_no_weight_table_for_route
check_update_weight_with_valid_value:
  action: goto_one_route_page
  action: click_to_goto_edit_page
  action: set_the_first_service_to_route
  action: set_the_second_service_to_route
  action: save_edit_route
  action: check_two_services_weight_on_route_page
check_update_weight_with_non_integer:
  action: goto_one_route_page
  action: click_to_goto_edit_page
  action: set_the_first_service_to_route
  action: check_error_info_of_first_service
  action: set_the_second_service_to_route
  action: check_error_info_of_second_service
  action: set_the_third_service_to_route
  action: check_error_info_of_third_service
  action: check_save_button_disabled
check_update_weight_with_integer_out_of_range:
  action: goto_one_route_page
  action: click_to_goto_edit_page
  action: set_the_second_service_to_route
  action: check_save_button_disabled
check_update_weight_with_empty_weight:
  action: goto_one_route_page
  action: click_to_goto_edit_page
  action: set_the_second_service_with_empty_weight
  action: check_save_button_disabled
check_update_route_with_duplicated_service:
  action: goto_one_route_page
  action: click_to_goto_edit_page
  action: set_the_second_service_to_route
  action: check_error_info_for_duplicated_service
  action: check_save_button_disabled
check_wildcard_hostname_readonly_when_edit:
  action: goto_one_route_page
  action: click_to_goto_edit_page
  action: check_warning_info_for_hostname
  action: check_hostname_readonly
check_warning_info_for_hostname:
  elements:
  - selector:
      xpath: //span[contains(., 'You can use')]
  - selector:
      xpath: //var[contains(., '*.example.com')]
  - selector:
      xpath: //span[contains(., 'with routers that support wildcard subdomains.')]
check_hostname_readonly:
  elements:
  - selector:
      xpath: //input[@id='host' and @readonly]
click_edit_weights_as_integers:
  elements:
  - selector:
      xpath: //a[contains(text(),'edit weights as integers')]
    op: click
check_error_info_for_duplicated_service:
  elements:
  - selector:
      xpath: //span[contains(text(), 'Service service-unsecure-3 cannot be added twice')]
check_error_info_of_first_service:
  elements:
  - selector:
      xpath: //osc-routing-service[@model='route.to']//div[contains(text(), 'Must be a whole number greater than or equal to 0')]
check_error_info_of_second_service:
  elements:
  - selector:
      xpath: //div[@ng-repeat="alternate in route.alternateServices"][1]//osc-routing-service[@model='alternate']//div[contains(text(), 'Must be a number')]
check_error_info_of_third_service:
  elements:
  - selector:
      xpath: //div[@ng-repeat="alternate in route.alternateServices"][2]//osc-routing-service[@model='alternate']//div[contains(text(), 'Must be a whole number greater than or equal to 0')]
set_the_second_service_with_empty_weight:
  elements:
  - selector:
      xpath: //div[@ng-repeat="alternate in route.alternateServices"][1]//osc-routing-service[@model='alternate']//input[@name="weight"]
    op: clear
check_no_weight_table_for_route:
  element:
    selector:
      tag_name: table
    missing: true
check_services_count:
  element:
    selector:
      xpath: //table[thead[contains(.,'Service')] and count(tbody/tr)=<svc_number>]
check_service_weight:
  element:
    selector:
      xpath: //td[contains(., '<name>')]/following::td[contains(text(), '<weight>')]
remove_a_service_from_route:
  element:
    selector:
      xpath: //div[@ng-repeat="alternate in route.alternateServices"][1]/a[contains(.,"Remove Service")]
    op: click
split_traffic_across_multiple_services:
  elements:
  - selector:
      text: Split traffic across multiple services
    op: click
set_the_first_service_to_route:
  elements:
  - selector:
      xpath: //osc-routing-service[@model='route.to']//div/span[span//span[text()='<first_svc_name>']]
    op: click
  - selector:
      xpath: //osc-routing-service[@model='route.to']//div[span/div[text()='<first_svc_name>']]
    op: click
  - selector: &first_service_weight_input
      xpath: //osc-routing-service[@model='route.to']//input[@name="weight"]
    op: clear
  - selector:
      <<: *first_service_weight_input
    op: send_keys <weight_one>
set_additional_service_to_route:
  elements:
  - selector:
      xpath: //div[@ng-repeat="alternate in route.alternateServices"][<service_id>]//span[contains(@class,'ui-select-match-text')]
    op: click
  - selector:
      xpath: //div[@ng-repeat="alternate in route.alternateServices"][<service_id>]//span/div[text()='<svc_name>']
    op: click
  - selector:
      xpath: //div[@ng-repeat="alternate in route.alternateServices"][<service_id>]//osc-routing-service[@model='alternate']//input[@name="weight"]
    op: clear
  - selector:
      xpath: //div[@ng-repeat="alternate in route.alternateServices"][<service_id>]//osc-routing-service[@model='alternate']//input[@name="weight"]
    op: send_keys <weight>
set_the_second_service_to_route:
  params:
    svc_name: <second_svc_name>
    weight: <weight_two>
    service_id: 1
  action: set_additional_service_to_route
set_the_third_service_to_route:
  params:
    svc_name: <third_svc_name>
    weight: <weight_three>
    service_id: 2
  action: set_additional_service_to_route
set_the_forth_service_to_route:
  params:
    svc_name: <forth_svc_name>
    weight: <weight_four>
    service_id: 3
  action: set_additional_service_to_route
expand_add_another_service:
  elements:
  - selector:
      text: Add Another Service
    type: a
    op: click
check_four_services_weight_on_route_page:
  action: check_three_services_weight_on_route_page
  elements:
  - selector:
      xpath: //td[contains(., '<forth_svc_name>')]/following::td[contains(text(), '<weight_four>')]
check_three_services_weight_on_route_page:
  action: check_two_services_weight_on_route_page
  elements:
  - selector:
      xpath: //td[contains(., '<third_svc_name>')]/following::td[contains(text(), '<weight_three>')]
check_two_services_weight_on_route_page:
  elements:
  - selector:
      xpath: //td[contains(., '<first_svc_name>')]/following::td[contains(text(), '<weight_one>')]
  - selector:
      xpath: //td[contains(., '<second_svc_name>')]/following::td[contains(text(), '<weight_two>')]
save_edit_route:
  action: click_save_button
cancel_edit_route:
  action: click_cancel
check_warning_info_for_path:
  elements:
  - selector:
      xpath: //span[contains(., "Path must start with")]
check_path_on_route_page:
  elements:
  - selector:
      xpath: //span[text()='<path>']
check_termination_type_on_route_page:
  elements:
  - selector:
      xpath: //dt[contains(., "Termination Type:")]/following-sibling::dd[contains(., '<termination_type>')]
