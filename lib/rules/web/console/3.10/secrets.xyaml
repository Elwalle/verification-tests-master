--- # secrets op

add_another_pull_secret_with_image_registry_credential:
  action: click_add_another_secret_link
  action: click_create_new_secret_link
  action: create_image_secret_stuff_with_image_registry_credential
  action: click_create_secret_button
  action: check_picked_secret
add_new_source_secret_with_basic_authentication:
  action: click_create_new_secret_link
  action: create_source_secret_with_basic_authentication
  action: click_create_secret_button
  action: check_picked_secret
add_new_push_secret_with_image_registry_credential:
  action: click_create_new_secret_link
  action: create_image_secret_stuff_with_image_registry_credential
  action: click_create_secret_button
  action: check_picked_secret
add_secret_to_application_as_env:
  action: goto_one_secret_page
  action: click_add_to_application
  action: choose_application
  action: choose_add_as_env
  action: click_save_button 
add_secret_to_application_as_volume:
  action: goto_one_secret_page
  action: click_add_to_application
  action: choose_application
  action: choose_add_as_volume
  action: click_save_button
check_error_prompt_when_input_secret_name:
  action: check_error_for_invalid_value
check_error_prompt_when_set_dockerbuild_secret_destinationdir:
  element:
    selector:
      xpath: //span[contains(text(),'for the docker strategy the destinationDir has to be relative path')]
check_error_prompt_when_set_secret_configuration_file:
  element:
    selector:
      xpath: //span[contains(text(),'Configuration file should be in JSON format')]
check_one_secret_no_permission_page:
  action: goto_one_secret_page
  element:
    selector:
      xpath: //strong[contains(.,'<secret>')]
    timeout: 300
check_picked_secret:
  element:
    selector:
      xpath: //osc-secrets[contains(@model,'<secret_type>')]//span[@aria-label='Select box activate']//span[contains(text(),'<new_secret_name>')]
check_secret_no_permission_page:
  action: goto_secrets_page
  element:
    selector:
      xpath: //h1[contains(.,"Secrets")]
click_add_another_secret_link:
  element:
    selector:
      xpath: //osc-secrets[contains(@model,'<secret_type>')]//a[@role='button' and contains(text(),'Add Another Secret')]
    op: click
click_add_another_build_secret_link:
  element:
    selector:
      xpath: //osc-source-secrets[@model='secrets.picked.sourceSecrets']//a[@role='button' and contains(text(),'Add Another Secret')]
    op: click
click_add_to_application:
  element:
    selector:
      xpath: //button[normalize-space()='Add to Application']
    op: click
choose_application:
  elements:
  - selector:
      xpath: //div[@id="application"]
    op: click
  - selector:
      xpath: //span[normalize-space()='<app_name>']
    op: click
choose_add_as_env:
  element:
    selector:
      xpath: //label[contains(.,'Environment variables')]
    op: click
choose_add_as_volume:
  elements:
  - selector:
      xpath: //label[contains(.,'Volume')]
    op: click
  - selector:
      id: mountVolume
    type: input
    op: send_keys <mount_path>
click_create_new_secret_link:
  element:
    selector:
      xpath: //osc-secrets[contains(@model,'<secret_type>')]//a[@role='button' and contains(text(),'Create New Secret')]
    op: click
click_create_secret_button:
  element:
    selector:
      xpath: //button[contains(text(),"Create") and not(@disabled) and contains(@ng-disabled,"secretForm")]
    type: button
    op: click
click_create_secret_on_secrets_page:
  action: close_all_toast_notifications
  action: click_create_secret_link
click_create_secret_link:
  element:
    selector:
      xpath: //a[contains(text(),'Create Secret') and contains(@href,'create-secret')]
    op: click
    type: a
click_remove_secret:
  element:
    selector:
      xpath: //osc-secrets[contains(@model,'<secret_type>')]//*[contains(@class,'btn-remove')]
    op: click
click_remove_build_secret:
  element:
    selector:
      xpath: //osc-source-secrets[@model='secrets.picked.sourceSecrets']//*[contains(@class,'btn-remove')]
    op: click
create_image_secret_stuff_with_image_registry_credential:
  action: set_created_secret_name
  action: select_created_secret_auth_type
  elements:
  - selector:
      id: docker-server
    type: input
    op: send_keys <new_docker_server>
  - selector:
      id: docker-username
    type: input
    op: send_keys <new_docker_user>
  - selector:
      id: docker-email
    type: input
    op: send_keys <new_docker_email>
  - selector:
      id: docker-password
    type: input
    op: send_keys <new_docker_passwd>
create_source_secret_with_basic_authentication:
  action: set_created_secret_name
  action: select_created_secret_auth_type
  elements:
  - selector:
      id: username
    type: input
    op: send_keys <username>
  - selector:
      id: password-token
    type: input
    op: send_keys <password_token>
create_generic_secret_from_file:
  action: goto_create_secret_page
  action: select_created_secret_type
  action: set_created_secret_name
  action: set_item_key
  action: create_from_file
  action: click_create_secret_button
create_generic_secret_from_user_input:
  action: goto_create_secret_page
  action: select_created_secret_type
  action: set_created_secret_name
  action: set_item_key
  action: type_item_value
  action: click_create_secret_button
create_image_secret_common_action_with_configuration_file_authentication:
  action: goto_create_secret_page
  action: select_created_secret_type
  action: select_created_secret_auth_type
  action: set_created_secret_name
create_image_secret_upload_dockercfg_with_configuration_file_authentication:
  action: create_image_secret_common_action_with_configuration_file_authentication
  action: upload_file_for_created_secret
create_image_secret_with_image_registry_credential:
  action: select_created_secret_type
  action: create_image_secret_stuff_with_image_registry_credential
create_source_secret_common_aciton_with_ssh_authentication:
  action: goto_create_secret_page
  action: select_created_secret_type
  action: select_created_secret_auth_type
  action: set_created_secret_name
create_source_secret_upload_gitconfig_with_basic_authentication:
  action: goto_create_secret_page
  action: select_created_secret_type
  action: create_source_secret_with_basic_authentication
  action: set_checkbox_option_for_secret
  action: upload_file_for_created_secret
create_source_secret_upload_sshkey_with_ssh_authentication:
  action: create_source_secret_common_aciton_with_ssh_authentication
  action: upload_file_for_created_secret
create_webhook_secret:
  params:
    secret_type: 'Webhook Secret'
  action: select_created_secret_type
  action: set_created_secret_name
  action: set_webhook_secret_key
  action: click_create_secret_button
create_webhook_secret_generated:
  params:
    secret_type: 'Webhook Secret'
  action: select_created_secret_type
  action: set_created_secret_name
  action: generate_webhook_secret_key
  action: click_create_secret_button
create_webhook_secret_in_modal:
  action: set_created_secret_name
  action: set_webhook_secret_key
  action: click_create_secret_button
generate_webhook_secret_key:
  element:
    selector:
      xpath: //button[contains(text(),'Generate')]
    op: click
goto_create_secret_page:
  action: goto_secrets_page
  action: click_create_secret_on_secrets_page
goto_one_secret_page:
  url: /console/project/<project_name>/browse/secrets/<secret>
goto_secrets_page:
  url: /console/project/<project_name>/browse/secrets
select_created_secret_auth_type:
  elements:
  - selector:
      xpath: //div[contains(@ng-model,'authType')]//span[@aria-label='Select box activate']
    op: click
  - selector:
      xpath: //div[contains(@ng-model,'authType')]//ul[@role='listbox']//div[contains(normalize-space(),'<auth_type>')]
    op: click
select_created_secret_type:
  elements:
  - selector:
      xpath: //div[@ng-model='newSecret.type']//span[@aria-label='Select box activate']
    op: click
  - selector:
      xpath: //div[@ng-model='newSecret.type']//ul[@role='listbox']//div[contains(normalize-space(),'<secret_type>')]
    op: click
select_sa_to_link:
  elements:
  - selector:
      xpath: //div[contains(@ng-model,'pickedServiceAccountToLink')]//span[@aria-label='Select box activate']
    op: click
  - selector:
      xpath: //div[contains(@ng-model,'pickedServiceAccountToLink')]//ul[@role='listbox']//div[contains(normalize-space(),'<sa_name>')]
    op: click
select_one_secret_from_box:
  elements:
  - selector:
      xpath: //osc-secrets[contains(@model,'<secret_type>')]//span[@aria-label='Select box activate']/span[contains(text(),'Secret name')]
    op: click
  - selector:
      xpath: //osc-secrets[contains(@model,'<secret_type>')]//ul[@role='listbox']//div[contains(text(),'<secret_name>')]
    op: click
select_one_build_secret_from_box:
  elements:
  - selector:
      xpath: //osc-source-secrets[@model='secrets.picked.sourceSecrets']//span[@aria-label='Select box activate']/span[contains(text(),'Secret name')]
    op: click
  - selector:
      xpath: //osc-source-secrets[@model='secrets.picked.sourceSecrets']//ul[@role='listbox']//div[contains(text(),'<secret_name>')]
    op: click
set_build_secret_destinationdir:
  element:
    selector:
      id: destinationDir
    type: input
    op: send_keys <destinationdir>
set_created_secret_name:
  elements:
  - selector:
      id: secret-name
    type: input
    op: clear
  - selector:
      id: secret-name
    type: input
    op: send_keys <new_secret_name>
set_custom_build_secret_mountpath:
  element:
    selector:
      xpath: //osc-source-secrets//div[contains(@ng-repeat,'pickedSecret')][count(//*[@id='mountPath'])]//input[@id='mountPath']
    type: input
    op: send_keys <mountpath>
set_link_secret_to_sa:
  action: set_checkbox_option_for_secret
  action: select_sa_to_link
set_checkbox_option_for_secret:
  element:
    selector:
      xpath: //input[contains(@ng-model,'<checkbox_option>')]
    type: checkbox
    op: set <is_check>
set_webhook_secret_key:
  elements:
  - selector:
      id: webhook-secret-key
    type: input
    op: clear
  - selector:
      id: webhook-secret-key
    type: input
    op: send_keys <webhook_secret_key>
upload_file_for_created_secret:
  element:
    selector:
      xpath: //div[contains(@id,'<file_type>')]//span[contains(text(),'Browse…')]/input
    visible: false
    type: filefield
    op: set <file_path>
